[metadata]
name = dls_pmaclib
description = Delta Tau pmac communication library
author = Jon Thompson
maintainer = Giles Knap
author_email = giles.knap@diamond.ac.uk
license = Apache License 2.0
long_description = file: README.rst
classifiers =
    Development Status :: 4 - Beta
    License :: OSI Approved :: Apache Software License
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8

[options]
packages = dls_pmaclib
include_package_data = False
install_requires =
    pyserial
    paramiko
    
[options.extras_require]
# For development tests/docs
dev =
    black==22.3.0
    flake8-isort
    isort>5.0
    mypy
    pre-commit
    pytest-cov
    sphinx-rtd-theme-github-versions
    tox
    setuptools_scm[toml]>=6.2
    mock
    types-mock
    types-paramiko

[options.packages.find]
# Don't include our tests directory in the distribution
exclude = tests

[mypy]
# Ignore missing stubs for modules we use
ignore_missing_imports = True

[isort]
# https://black.readthedocs.io/en/stable/the_black_code_style.html?highlight=isort#how-black-wraps-lines
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88
skip=setup.py,conf.py
known_third_party=dls_pmaclib

[flake8]
# Make flake8 respect black's line length (default 88),
max-line-length = 88
extend-ignore =
    # See https://github.com/PyCQA/pycodestyle/issues/373
    E203,

[tool:pytest]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = --tb=native -vv

# Use tox to provide parallel linting and testing
# NOTE that we pre-install all tools in the dev dependencies (including tox).
# Hence the use of allowlist_externals instead of using the tox virtualenvs.
# This ensures a match between developer time tools in the IDE and tox tools.
[tox:tox]
minversion = 3.8
skipsdist=true
skipinstall=true

[testenv:{pre-commit,mypy,pytest,docs}]
setenv =
    QT_QPA_PLATFORM = offscreen
allowlist_externals = 
    pytest 
    pre-commit
    mypy
    sphinx-build
commands =
    pytest: pytest tests
    mypy: mypy dls_pmaclib tests
    pre-commit: pre-commit run --all-files
    docs: sphinx-build -EWT --keep-going docs build/html